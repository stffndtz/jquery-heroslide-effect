/**	jQuery Hero Slide Effect Plugin**	Author: Steffen Dietz*	Version: alpha*	last edited: 29.02.2012**/(function($) {	$.fn.heroSlideEffect = function(o) {				/*		*	SETUP OBJECT		*/				o = $.extend({  wrapper: '.hse-wrapper',						startItemIndex: 0,						activeIndex: -1,						x: 95,						//width of single element						delay: 60,						fx: 'swing',						speed: 500,						beforeAnimation: function(){											return true;										},						afterAnimation: function(){											return true;										}					},						o || {}					);				/*		*	SETUP VARS		*/		var v = {			active: o.activeIndex,			wrapperHeight: $(o.wrapper).height(),			wrapperWidth: $(o.wrapper).width(),			wrapperOffset: $(o.wrapper).offset(),			//count current li items			currentCount: 0,			//position on x-axis			x: 0,			//count li items on init			initCount: $(o.wrapper + " ul:eq(" + o.startItemIndex + ") li").length,			animating: false,			loop_started: false		};		/*		*	close the wrapper before everything else		*/		$(o.wrapper).height(0);		/*		*	Take all nested lists and move them into wrapper		*/		$('ul',this).hide().each(function(){			$(this).css('width',($(this).children().length * o.x)).appendTo(o.wrapper).show();		});		/*		*	Move all elements into darkness		*/		$(o.wrapper + ' ul li').each(function(){			$(this).css('left',($(this).width() * (-1)));		});				return this.each(function() {			/*			*	handler for beforeAnimation			*/			function doAnimation(id){				if(o.beforeAnimation()){					slideInFromLeft(id);				}				else				{					return false;				}			}			/*			*	handler for afterAnimation			*/			function endAnimation(){				o.afterAnimation();			}						/*			*	slide in from left side			*	@param id			*/			function slideInFromLeft(id){				v.currentCount = $(o.wrapper + " ul:eq(" + id + ") li").length;				if (v.currentCount > 0){										$(o.wrapper)					.animate(						{height:v.wrapperHeight},						o.speed,						function(){							$(o.wrapper + " ul:eq(" + id + ") li").each(function(index){								v.x = (v.wrapperWidth / 2) + (v.currentCount * o.x) - (o.x * index);								$(o.wrapper + " ul:eq(" + id + ") li:eq(" + (v.currentCount - index - 1) + ")")								.delay((index + 2) * o.delay)								.animate(										{left: "+=" + v.x},										o.speed,										o.fx,										function(){											if (index + 1 == v.currentCount)												v.animating = false;												endAnimation();										}								);		//slideIn close															});		//li loop close						});		//slideDown close									}							}			/*			*	slide out to left side			*	@param id			*	@param to			*/			function out_left(id, to){				v.animating = true;				v.currentCount = $(o.div + " ul:eq(" + id + ") li").length;				if (v.currentCount > 0){					$(o.wrapper + " ul:eq(" + id + ") li").each(function(index){						v.x = $(this).offset().left - v.wrapperOffset.left + o.x;						$(this)						.delay((index + 1) * o.delay)						.animate(								{left: "-=" + v.x},								o.speed,								function(){									if (index + 1 == v.currentCount)										v.animating = false;										slideUpWrapper();								}						);		//slideOut close												});		//li loop close				}			}			/*			*	slide up the wrapper			*/			function slideUpWrapper(){				$(o.wrapper)				.animate(					{height:0},					o.speed,					function(){						endAnimation();					}				);			}			/*			*	Update values on resize			*/			window.onresize = function() {				v.middle = $(document).width() / 2,				v.wrapperOffset = $(o.wrapper).offset();			}			/*			*	control hover $('li', this)			*/			$()			/*			*	setup active item on init			*	first check if active item is defined			*	also check if we have something to slide In!			*				*/			if(v.active >= 0)				doAnimation(v.active);								});	};})(jQuery);			